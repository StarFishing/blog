(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{331:function(t,a,e){"use strict";e.r(a);var s=e(39),n=Object(s.a)({},function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"在-js-中，如何让-a-1-a-2-a-3-严格相等-的值为-true"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在-js-中，如何让-a-1-a-2-a-3-严格相等-的值为-true","aria-hidden":"true"}},[t._v("#")]),t._v(" 在 JS 中，如何让(a===1 && a===2 && a === 3)(严格相等)的值为 true")]),t._v(" "),e("p",[t._v("原文: "),e("a",{attrs:{href:"http://theanubhav.com/2018/11/07/understanding-primitive-and-getter-setters/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Will (a===1 && a===2 && a===3) (strict comparison) ever be true (in JavaScript)"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("本文是 JS 经典问题(a == 1 && a==2 && a==3)(宽松相等)的扩展和解决方案")])]),t._v(" "),e("h2",{attrs:{id:"如何使用-getter-setter-描述符让-a-1-a-2-a-3-的值为-true"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#如何使用-getter-setter-描述符让-a-1-a-2-a-3-的值为-true","aria-hidden":"true"}},[t._v("#")]),t._v(" 如何使用 getter/setter 描述符让(a===1 && a===2 && a === 3)的值为 true")]),t._v(" "),e("p",[t._v("我们先简单了解  这道 JS 经典问题, 然后再解决它的扩展问题。")]),t._v(" "),e("p",[t._v("内容概览:")]),t._v(" "),e("ul",[e("li",[t._v("重温(a==1&&a==2&&a==3)(宽松相等)问题\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5bfcc632f265da61493353cc#traditional-problem",target:"_blank",rel:"noopener noreferrer"}},[t._v("(a==1&&a==2&&a==3)问题描述"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5bfcc632f265da61493353cc#tradition-problem-explanation",target:"_blank",rel:"noopener noreferrer"}},[t._v("答案与解释"),e("OutboundLink")],1)])])]),t._v(" "),e("li",[t._v("(a===1&&a===2&&a===3)扩展问题\n"),e("ul",[e("li",[t._v("问题答案与解释\n"),e("ul",[e("li",[e("a",{attrs:{href:"https://juejin.im/post/5bfcc632f265da61493353cc#descriptors",target:"_blank",rel:"noopener noreferrer"}},[t._v("什么是属性描述符"),e("OutboundLink")],1)])])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"https://juejin.im/post/5bfcc632f265da61493353cc#refer",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"重温-a-1-a-2-a-3-宽松相等-问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重温-a-1-a-2-a-3-宽松相等-问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 重温(a==1&&a==2&&a==3)(宽松相等)问题")]),t._v(" "),e("p",[t._v("如果你已经了解过这个问题并且知道如何解决这个 JS 谜题(是的，只是一个谜题，我并不想在生产代码中看到这样的用例) , 那你可以直接跳到下一节，阅读它的扩展问题。关于这个问题在"),e("a",{attrs:{href:"https://www.reddit.com/r/javascript/comments/7r0i00/can_a_1_a_2_a3_ever_evaluate_to_true/",target:"_blank",rel:"noopener noreferrer"}},[t._v("reddit"),e("OutboundLink")],1),t._v("上有相关讨论， 下面是我看到最有趣的评论")]),t._v(" "),e("p",[t._v('"如果我在代码库中看到这样的代码，我可能就很绝望了" // 译者注: 谁看到都会很绝望吧')]),t._v(" "),e("h4",{attrs:{id:"a-1-a-2-a-3-问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-1-a-2-a-3-问题","aria-hidden":"true"}},[t._v("#")]),t._v(" (a==1 && a== 2 && a ==3 )问题")]),t._v(" "),e("blockquote",[e("p",[t._v("(a ==1 && a==2 && a==3) 的值可以是 true 吗？")])]),t._v(" "),e("p",[t._v("回答是肯定的, 具体可以看下面的代码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n复制代码\n")])])]),e("p",[t._v("通常, 在面试中问这类问题的目的并不是要求面试者记住这样的答案，而是想要了解面试者在面对这道题目时，是如何思考的以及他们是否有了解过 Javascript 中关于"),e("code",[t._v("==")]),t._v("的奇特的语法特性。")]),t._v(" "),e("h4",{attrs:{id:"问题解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题解析","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题解析")]),t._v(" "),e("p",[t._v('秘密就在于"宽松相等操作符 '),e("code",[t._v("==")]),t._v(' "')]),t._v(" "),e("p",[t._v("在 JS 中，宽松相等"),e("code",[t._v("==")]),t._v("会先将左右两两边的值转化成相同的原始类型，然后再去比较他们是否相等。在转化之后("),e("code",[t._v("==")]),t._v("一边或两边都需要转化)，最后的相等匹配会像"),e("code",[t._v("===")]),t._v("符号一样去执行判断。宽松相等是可逆的，对于任何值 A 与 B，通常"),e("code",[t._v("A == B")]),t._v("与"),e("code",[t._v("B == A")]),t._v("具有相同的表现(除了转换的顺序不同)。可以在"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("详细深度地了解宽松匹配"),e("code",[t._v("==")]),t._v("与严格匹配"),e("code",[t._v("===")]),t._v("。")]),t._v(" "),e("p",[t._v("Javascript 会如何强制转换这个值呢？")]),t._v(" "),e("p",[t._v("在进行两个值的比较时，执行了类型的强制转换， 让我们先了解下内置的转换函数。")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("ToPrimitive")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PreferredType"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n复制代码\n")])])]),e("p",[t._v("可选参数"),e("code",[t._v("PreferredType")]),t._v("可以指定最终转化的类型，它可以是"),e("code",[t._v("Number")]),t._v("类型或"),e("code",[t._v("String")]),t._v("类型，这依赖于"),e("code",[t._v("ToPrimitive()")]),t._v("方法执行的结果返回的是"),e("code",[t._v("Number")]),t._v("类型或"),e("code",[t._v("String")]),t._v("类型。")]),t._v(" "),e("p",[t._v("值的转化过程如下")]),t._v(" "),e("ol",[e("li",[t._v("如果输入 Input 是基本类型, 就返回这个值")]),t._v(" "),e("li",[t._v("如果输入变量是 Object 类型, 那么调用 input.valueOf(). 如果返回结果是基本类型，就返回这个指")]),t._v(" "),e("li",[t._v("如果都不是的话就调用 input.toString(). 如果结果是基本类型, 就返回它")]),t._v(" "),e("li",[t._v("如果以上都不可以，就会抛出一个类型错误"),e("code",[t._v("TypeError")]),t._v("， 表示转化 input 变量到基本类型失败。")])]),t._v(" "),e("p",[t._v("如果"),e("code",[t._v("PreferredType")]),t._v("是"),e("code",[t._v("Number")]),t._v("， 那转换算法就会像上述说明的顺序执行，如果是"),e("code",[t._v("String")]),t._v("，步骤 2 和步骤 3 会交换顺序。"),e("code",[t._v("PreferredType")]),t._v("是一个缺省值，如果不输入的话，"),e("code",[t._v("Date")]),t._v("类型会被当作"),e("code",[t._v("String")]),t._v("类型处理，其他变量会当作"),e("code",[t._v("Number")]),t._v("处理。默认的"),e("code",[t._v("valueOf")]),t._v("返回"),e("code",[t._v("this")]),t._v("，默认的 toString()会返回类型信息。")]),t._v(" "),e("p",[t._v("如上是操作符"),e("code",[t._v("+")]),t._v("和"),e("code",[t._v("==")]),t._v("调用"),e("code",[t._v("toPrimitive()")]),t._v("的执行过程。")]),t._v(" "),e("p",[t._v("所以在上面的代码中, 如 JS 引擎所解析的，"),e("code",[t._v("a == 1")]),t._v("， "),e("code",[t._v("1")]),t._v("是基本类型, JS 引擎会尝试将"),e("code",[t._v("a")]),t._v("转换成"),e("code",[t._v("Number")]),t._v("类型，然后在上面的算法中，"),e("code",[t._v("a.valueOf")]),t._v("被调用并且返回 1(自增 1 并且返回自己)。在"),e("code",[t._v("a==2")]),t._v("和"),e("code",[t._v("a==3")]),t._v("发生了同样的类型转换并增加自己的值。")]),t._v(" "),e("h3",{attrs:{id:"a-1-a-2-a-3-严格匹配-问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a-1-a-2-a-3-严格匹配-问题","aria-hidden":"true"}},[t._v("#")]),t._v(" (a === 1 && a === 2 && a === 3)(严格匹配) 问题")]),t._v(" "),e("blockquote",[e("p",[t._v("(a === 1 && a === 2 && a ===3)的值也能是 true 吗？")])]),t._v(" "),e("p",[t._v("当然也可以, 具体请看下面的代码")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//window.value")]),t._v("\nObject"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n复制代码\n")])])]),e("h4",{attrs:{id:"问题解释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#问题解释","aria-hidden":"true"}},[t._v("#")]),t._v(" 问题解释")]),t._v(" "),e("p",[t._v("从经典问题的解答中，我们了解到 JS 中的原始类型将不再满足于上面的条件(严格相等没有转化的过程)，所以我们需要通过一些方式去调用一个函数，并在这个函数中做我们想做的事情。但是执行函数往往需要在函数名字后引入"),e("code",[t._v("()")]),t._v("。并且由于这里不是宽松相等"),e("code",[t._v("==")]),t._v("，"),e("code",[t._v("valueOf")]),t._v("将不会被 JS 引擎调用。Emmm, 有点棘手。还好有"),e("code",[t._v("Property")]),t._v("函数, 特别是"),e("code",[t._v("getter")]),t._v("描述符， 带来了解决这个问题的办法。")]),t._v(" "),e("h5",{attrs:{id:"什么是属性描述符-property-descriptors"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#什么是属性描述符-property-descriptors","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是属性描述符(property descriptors)?")]),t._v(" "),e("p",[t._v("属性描述符有两种类型, 数据描述符和存取描述符。")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("数据描述符")]),t._v(" "),e("p",[t._v("强制键值 - value")]),t._v(" "),e("p",[t._v("可选键值")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v(" - configurable\n - enumable\n - writeable\n复制代码\n")])])]),e("p",[t._v("例子")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("{\n    value: 5,\n    writable: true\n}\n复制代码\n")])])])]),t._v(" "),e("li",[e("p",[t._v("存取描述符")]),t._v(" "),e("p",[t._v("强制键值 - get/set 或都设定 可选键值 - confiturable - enumerable 例子")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    enumerable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n复制代码\n")])])])])]),t._v(" "),e("p",[t._v("MDN 上关于存取描述符的例子")]),t._v(" "),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Example of an object property added")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// with defineProperty with an accessor property descriptor")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" bValue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("38")]),t._v("\n\nObject"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("defineProperty")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Using shorthand method names (ES2015 feature).")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is equivalent to:")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// get: function() { return bValue; },")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set: function(newValue) { bValue = newValue; },")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("get")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bValue\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newValue"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    bValue "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newValue\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  enumerable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  configurable"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\no"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("b "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 38")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 'b' property exists in the o object and its value is 38")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The value of o.b is now always identical to bValue,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// unless o.b is redefined")]),t._v("\n复制代码\n")])])]),e("p",[t._v("在问题的解决方案中, 我们使用"),e("code",[t._v("Object.defineProperty")]),t._v("为对象定义了一个属性。你可以在"),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),e("OutboundLink")],1),t._v("深入了解"),e("code",[t._v("Object.defineProperty")]),t._v("的语法与定义。 有趣的是，"),e("code",[t._v("get")]),t._v(" 和 "),e("code",[t._v("set")]),t._v("是可以通过"),e("code",[t._v('"."操作符')]),t._v("调用的方法, 举个例子, "),e("code",[t._v("a")]),t._v("有一个具有"),e("code",[t._v("getter")]),t._v("的"),e("code",[t._v("b")]),t._v("属性, \b 它可以像对象的其他属性一样去调用，类似于"),e("code",[t._v("a.b")]),t._v("\b。这可以解决我们最初的问题, 我们需要调用一个无需"),e("code",[t._v("()")]),t._v("的函数, 通过"),e("code",[t._v("get")]),t._v("属性, 我们可以调用一个函数并且不用在函数名后添加"),e("code",[t._v("()")])]),t._v(" "),e("p",[t._v("在上面提到的解决方案中, 我们在 window 对象上定义了一个 \b 具有 getter 的"),e("code",[t._v("a")]),t._v("属性, 所以"),e("code",[t._v("a")]),t._v("可以在代码中直接被访问到(全局变量)\b， 因此也可以直接获得 a 的值。如果我们在其他对象上定义了属性"),e("code",[t._v("a")]),t._v("而不是 window 的话，例如 object1， 我们就需要改变题目为"),e("code",[t._v("object1.a===1 && object1.a===2 && object1.a===3")]),t._v("了。")]),t._v(" "),e("h4",{attrs:{id:"github-gist"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-gist","aria-hidden":"true"}},[t._v("#")]),t._v(" Github Gist\b")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://gist.github.com/anubhavsrivastava/4680a165db9e1abc459c5987e778a674",target:"_blank",rel:"noopener noreferrer"}},[t._v("Problem (a==1 && a==2 && a==3)"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://gist.github.com/anubhavsrivastava/2bd7cd81fb23d138df99c47988855adc",target:"_blank",rel:"noopener noreferrer"}},[t._v("Problem (a===1 && a===2 && a===3)"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"参考"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),e("ul",[e("li",[e("p",[e("a",{attrs:{href:"https://www.reddit.com/r/javascript/comments/7r0i00/can_a_1_a_2_a3_ever_evaluate_to_true/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reddit Post"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"http://speakingjs.com/es5/ch17.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Speaking JS"),e("OutboundLink")],1)])]),t._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript",target:"_blank",rel:"noopener noreferrer"}},[t._v("MDN web-docs"),e("OutboundLink")],1)]),t._v(" "),e("Valine")],1)])])},[],!1,null,null,null);a.default=n.exports}}]);